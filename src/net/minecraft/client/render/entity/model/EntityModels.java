/*
 * Decompiled with CFR 0.2.2 (FabricMC 7c48b8c4).
 * 
 * Could not load the following classes:
 *  net.fabricmc.api.EnvType
 *  net.fabricmc.api.Environment
 */
package net.minecraft.client.render.entity.model;

import com.google.common.collect.ImmutableMap;
import java.util.List;
import java.util.Map;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.minecraft.block.WoodType;
import net.minecraft.client.model.Dilation;
import net.minecraft.client.model.TexturedModelData;
import net.minecraft.client.render.block.entity.BedBlockEntityRenderer;
import net.minecraft.client.render.block.entity.ConduitBlockEntityRenderer;
import net.minecraft.client.render.block.entity.DecoratedPotBlockEntityRenderer;
import net.minecraft.client.render.block.entity.HangingSignBlockEntityRenderer;
import net.minecraft.client.render.block.entity.SignBlockEntityRenderer;
import net.minecraft.client.render.block.entity.model.BannerBlockModel;
import net.minecraft.client.render.block.entity.model.BannerFlagBlockModel;
import net.minecraft.client.render.block.entity.model.BellBlockModel;
import net.minecraft.client.render.block.entity.model.ChestBlockModel;
import net.minecraft.client.render.entity.DragonEntityModel;
import net.minecraft.client.render.entity.WitherSkullEntityRenderer;
import net.minecraft.client.render.entity.model.AbstractHorseEntityModel;
import net.minecraft.client.render.entity.model.AllayEntityModel;
import net.minecraft.client.render.entity.model.ArmadilloEntityModel;
import net.minecraft.client.render.entity.model.ArmorStandArmorEntityModel;
import net.minecraft.client.render.entity.model.ArmorStandEntityModel;
import net.minecraft.client.render.entity.model.ArrowEntityModel;
import net.minecraft.client.render.entity.model.AxolotlEntityModel;
import net.minecraft.client.render.entity.model.BatEntityModel;
import net.minecraft.client.render.entity.model.BeeEntityModel;
import net.minecraft.client.render.entity.model.BipedEntityModel;
import net.minecraft.client.render.entity.model.BlazeEntityModel;
import net.minecraft.client.render.entity.model.BoatEntityModel;
import net.minecraft.client.render.entity.model.BoggedEntityModel;
import net.minecraft.client.render.entity.model.BookModel;
import net.minecraft.client.render.entity.model.BreezeEntityModel;
import net.minecraft.client.render.entity.model.CamelEntityModel;
import net.minecraft.client.render.entity.model.CamelSaddleEntityModel;
import net.minecraft.client.render.entity.model.CatEntityModel;
import net.minecraft.client.render.entity.model.ChickenEntityModel;
import net.minecraft.client.render.entity.model.CodEntityModel;
import net.minecraft.client.render.entity.model.ColdChickenEntityModel;
import net.minecraft.client.render.entity.model.ColdCowEntityModel;
import net.minecraft.client.render.entity.model.ColdPigEntityModel;
import net.minecraft.client.render.entity.model.CopperGolemEntityModel;
import net.minecraft.client.render.entity.model.CowEntityModel;
import net.minecraft.client.render.entity.model.CreakingEntityModel;
import net.minecraft.client.render.entity.model.CreeperEntityModel;
import net.minecraft.client.render.entity.model.Deadmau5EarsEntityModel;
import net.minecraft.client.render.entity.model.DolphinEntityModel;
import net.minecraft.client.render.entity.model.DonkeyEntityModel;
import net.minecraft.client.render.entity.model.DragonHeadEntityModel;
import net.minecraft.client.render.entity.model.DrownedEntityModel;
import net.minecraft.client.render.entity.model.ElytraEntityModel;
import net.minecraft.client.render.entity.model.EndCrystalEntityModel;
import net.minecraft.client.render.entity.model.EndermanEntityModel;
import net.minecraft.client.render.entity.model.EndermiteEntityModel;
import net.minecraft.client.render.entity.model.EntityModelLayer;
import net.minecraft.client.render.entity.model.EntityModelLayers;
import net.minecraft.client.render.entity.model.EquipmentModelData;
import net.minecraft.client.render.entity.model.EvokerFangsEntityModel;
import net.minecraft.client.render.entity.model.FelineEntityModel;
import net.minecraft.client.render.entity.model.FoxEntityModel;
import net.minecraft.client.render.entity.model.FrogEntityModel;
import net.minecraft.client.render.entity.model.GhastEntityModel;
import net.minecraft.client.render.entity.model.GoatEntityModel;
import net.minecraft.client.render.entity.model.GuardianEntityModel;
import net.minecraft.client.render.entity.model.HappyGhastEntityModel;
import net.minecraft.client.render.entity.model.HappyGhastHarnessEntityModel;
import net.minecraft.client.render.entity.model.HoglinEntityModel;
import net.minecraft.client.render.entity.model.HorseSaddleEntityModel;
import net.minecraft.client.render.entity.model.IllagerEntityModel;
import net.minecraft.client.render.entity.model.IronGolemEntityModel;
import net.minecraft.client.render.entity.model.LargePufferfishEntityModel;
import net.minecraft.client.render.entity.model.LargeTropicalFishEntityModel;
import net.minecraft.client.render.entity.model.LeashKnotEntityModel;
import net.minecraft.client.render.entity.model.LlamaEntityModel;
import net.minecraft.client.render.entity.model.LlamaSpitEntityModel;
import net.minecraft.client.render.entity.model.MagmaCubeEntityModel;
import net.minecraft.client.render.entity.model.MediumPufferfishEntityModel;
import net.minecraft.client.render.entity.model.MinecartEntityModel;
import net.minecraft.client.render.entity.model.ModelTransformer;
import net.minecraft.client.render.entity.model.PandaEntityModel;
import net.minecraft.client.render.entity.model.ParrotEntityModel;
import net.minecraft.client.render.entity.model.PhantomEntityModel;
import net.minecraft.client.render.entity.model.PigEntityModel;
import net.minecraft.client.render.entity.model.PiglinEntityModel;
import net.minecraft.client.render.entity.model.PiglinHeadEntityModel;
import net.minecraft.client.render.entity.model.PlayerCapeModel;
import net.minecraft.client.render.entity.model.PlayerEntityModel;
import net.minecraft.client.render.entity.model.PolarBearEntityModel;
import net.minecraft.client.render.entity.model.RabbitEntityModel;
import net.minecraft.client.render.entity.model.RaftEntityModel;
import net.minecraft.client.render.entity.model.RavagerEntityModel;
import net.minecraft.client.render.entity.model.SalmonEntityModel;
import net.minecraft.client.render.entity.model.SheepEntityModel;
import net.minecraft.client.render.entity.model.SheepWoolEntityModel;
import net.minecraft.client.render.entity.model.ShieldEntityModel;
import net.minecraft.client.render.entity.model.ShulkerBulletEntityModel;
import net.minecraft.client.render.entity.model.ShulkerEntityModel;
import net.minecraft.client.render.entity.model.SilverfishEntityModel;
import net.minecraft.client.render.entity.model.SkeletonEntityModel;
import net.minecraft.client.render.entity.model.SkullEntityModel;
import net.minecraft.client.render.entity.model.SlimeEntityModel;
import net.minecraft.client.render.entity.model.SmallPufferfishEntityModel;
import net.minecraft.client.render.entity.model.SmallTropicalFishEntityModel;
import net.minecraft.client.render.entity.model.SnifferEntityModel;
import net.minecraft.client.render.entity.model.SnowGolemEntityModel;
import net.minecraft.client.render.entity.model.SpiderEntityModel;
import net.minecraft.client.render.entity.model.SquidEntityModel;
import net.minecraft.client.render.entity.model.StingerModel;
import net.minecraft.client.render.entity.model.StriderEntityModel;
import net.minecraft.client.render.entity.model.TadpoleEntityModel;
import net.minecraft.client.render.entity.model.TridentEntityModel;
import net.minecraft.client.render.entity.model.TridentRiptideEntityModel;
import net.minecraft.client.render.entity.model.TurtleEntityModel;
import net.minecraft.client.render.entity.model.VexEntityModel;
import net.minecraft.client.render.entity.model.VillagerResemblingModel;
import net.minecraft.client.render.entity.model.WardenEntityModel;
import net.minecraft.client.render.entity.model.WarmCowEntityModel;
import net.minecraft.client.render.entity.model.WindChargeEntityModel;
import net.minecraft.client.render.entity.model.WitchEntityModel;
import net.minecraft.client.render.entity.model.WitherEntityModel;
import net.minecraft.client.render.entity.model.WolfEntityModel;
import net.minecraft.client.render.entity.model.ZombieVillagerEntityModel;

@Environment(value=EnvType.CLIENT)
public class EntityModels {
    private static final Dilation FISH_PATTERN_DILATION = new Dilation(0.008f);
    private static final Dilation ARMOR_DILATION = new Dilation(1.0f);
    private static final Dilation HAT_DILATION = new Dilation(0.5f);

    public static Map<EntityModelLayer, TexturedModelData> getModels() {
        ImmutableMap.Builder<EntityModelLayer, TexturedModelData> builder = ImmutableMap.builder();
        TexturedModelData lv = TexturedModelData.of(BipedEntityModel.getModelData(Dilation.NONE, 0.0f), 64, 64);
        EquipmentModelData<TexturedModelData> lv2 = BipedEntityModel.createEquipmentModelData(HAT_DILATION, ARMOR_DILATION).map(data -> TexturedModelData.of(data, 64, 32));
        EquipmentModelData<TexturedModelData> lv3 = lv2.map(modelData -> modelData.transform(BipedEntityModel.BABY_TRANSFORMER));
        EquipmentModelData<TexturedModelData> lv4 = PlayerEntityModel.createEquipmentModelData(HAT_DILATION, ARMOR_DILATION).map(data -> TexturedModelData.of(data, 64, 32));
        EquipmentModelData<TexturedModelData> lv5 = PiglinEntityModel.createEquipmentModelData(HAT_DILATION, new Dilation(1.02f)).map(data -> TexturedModelData.of(data, 64, 32));
        EquipmentModelData<TexturedModelData> lv6 = lv5.map(modelData -> modelData.transform(BipedEntityModel.BABY_TRANSFORMER));
        TexturedModelData lv7 = MinecartEntityModel.getTexturedModelData();
        TexturedModelData lv8 = SkullEntityModel.getSkullTexturedModelData();
        TexturedModelData lv9 = TexturedModelData.of(AbstractHorseEntityModel.getModelData(Dilation.NONE), 64, 64);
        TexturedModelData lv10 = TexturedModelData.of(AbstractHorseEntityModel.getBabyHorseModelData(Dilation.NONE), 64, 64);
        TexturedModelData lv11 = HorseSaddleEntityModel.getTexturedModelData(false);
        TexturedModelData lv12 = HorseSaddleEntityModel.getTexturedModelData(true);
        ModelTransformer lv13 = ModelTransformer.scaling(0.9375f);
        TexturedModelData lv14 = IllagerEntityModel.getTexturedModelData().transform(lv13);
        TexturedModelData lv15 = AxolotlEntityModel.getTexturedModelData();
        TexturedModelData lv16 = BeeEntityModel.getTexturedModelData();
        TexturedModelData lv17 = CowEntityModel.getTexturedModelData();
        TexturedModelData lv18 = ColdChickenEntityModel.getTexturedModelData();
        TexturedModelData lv19 = ColdCowEntityModel.getTexturedModelData();
        TexturedModelData lv20 = ColdPigEntityModel.getTexturedModelData(Dilation.NONE);
        TexturedModelData lv21 = ElytraEntityModel.getTexturedModelData();
        TexturedModelData lv22 = TexturedModelData.of(FelineEntityModel.getModelData(Dilation.NONE), 64, 32);
        TexturedModelData lv23 = lv22.transform(FelineEntityModel.BABY_TRANSFORMER);
        TexturedModelData lv24 = TexturedModelData.of(FelineEntityModel.getModelData(new Dilation(0.01f)), 64, 32);
        TexturedModelData lv25 = TexturedModelData.of(PiglinEntityModel.getModelData(Dilation.NONE), 64, 64);
        TexturedModelData lv26 = TexturedModelData.of(PiglinHeadEntityModel.getModelData(), 64, 64);
        TexturedModelData lv27 = SkullEntityModel.getHeadTexturedModelData();
        TexturedModelData lv28 = LlamaEntityModel.getTexturedModelData(Dilation.NONE);
        TexturedModelData lv29 = LlamaEntityModel.getTexturedModelData(new Dilation(0.5f));
        TexturedModelData lv30 = StriderEntityModel.getTexturedModelData();
        TexturedModelData lv31 = HoglinEntityModel.getTexturedModelData();
        TexturedModelData lv32 = HoglinEntityModel.getBabyTexturedModelData();
        TexturedModelData lv33 = SkeletonEntityModel.getTexturedModelData();
        TexturedModelData lv34 = TexturedModelData.of(VillagerResemblingModel.getModelData(), 64, 64).transform(lv13);
        TexturedModelData lv35 = TexturedModelData.of(VillagerResemblingModel.getNoHatModelData(), 64, 64).transform(lv13);
        TexturedModelData lv36 = SpiderEntityModel.getTexturedModelData();
        TexturedModelData lv37 = ArmadilloEntityModel.getTexturedModelData();
        TexturedModelData lv38 = CamelEntityModel.getTexturedModelData();
        TexturedModelData lv39 = CamelSaddleEntityModel.getTexturedModelData();
        TexturedModelData lv40 = ChickenEntityModel.getTexturedModelData();
        TexturedModelData lv41 = GoatEntityModel.getTexturedModelData();
        TexturedModelData lv42 = PandaEntityModel.getTexturedModelData();
        TexturedModelData lv43 = PigEntityModel.getTexturedModelData(Dilation.NONE);
        TexturedModelData lv44 = PigEntityModel.getTexturedModelData(new Dilation(0.5f));
        TexturedModelData lv45 = SheepEntityModel.getTexturedModelData();
        TexturedModelData lv46 = SheepWoolEntityModel.getTexturedModelData();
        TexturedModelData lv47 = SnifferEntityModel.getTexturedModelData();
        TexturedModelData lv48 = TurtleEntityModel.getTexturedModelData();
        TexturedModelData lv49 = WarmCowEntityModel.getTexturedModelData();
        TexturedModelData lv50 = TexturedModelData.of(WolfEntityModel.getTexturedModelData(Dilation.NONE), 64, 32);
        TexturedModelData lv51 = TexturedModelData.of(WolfEntityModel.getTexturedModelData(new Dilation(0.2f)), 64, 32);
        TexturedModelData lv52 = ZombieVillagerEntityModel.getTexturedModelData();
        TexturedModelData lv53 = ZombieVillagerEntityModel.getTexturedModelDataWithoutHead();
        TexturedModelData lv54 = ArmorStandEntityModel.getTexturedModelData();
        EquipmentModelData<TexturedModelData> lv55 = ArmorStandArmorEntityModel.getEquipmentModelData(HAT_DILATION, ARMOR_DILATION);
        TexturedModelData lv56 = DrownedEntityModel.getTexturedModelData(Dilation.NONE);
        TexturedModelData lv57 = DrownedEntityModel.getTexturedModelData(new Dilation(0.25f));
        TexturedModelData lv58 = SquidEntityModel.getTexturedModelData();
        TexturedModelData lv59 = DolphinEntityModel.getTexturedModelData();
        TexturedModelData lv60 = SalmonEntityModel.getTexturedModelData();
        builder.put(EntityModelLayers.ALLAY, AllayEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.ARMADILLO, lv37);
        builder.put(EntityModelLayers.ARMADILLO_BABY, lv37.transform(ArmadilloEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.ARMOR_STAND, lv54);
        EntityModelLayers.ARMOR_STAND_EQUIPMENT.addTo(lv55, builder);
        builder.put(EntityModelLayers.ARMOR_STAND_SMALL, lv54.transform(BipedEntityModel.BABY_TRANSFORMER));
        EntityModelLayers.SMALL_ARMOR_STAND_EQUIPMENT.addTo(lv55.map(modelData -> modelData.transform(BipedEntityModel.BABY_TRANSFORMER)), builder);
        builder.put(EntityModelLayers.ARROW, ArrowEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.AXOLOTL, lv15);
        builder.put(EntityModelLayers.AXOLOTL_BABY, lv15.transform(AxolotlEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.STANDING_BANNER, BannerBlockModel.getTexturedModelData(true));
        builder.put(EntityModelLayers.WALL_BANNER, BannerBlockModel.getTexturedModelData(false));
        builder.put(EntityModelLayers.STANDING_BANNER_FLAG, BannerFlagBlockModel.getTexturedModelData(true));
        builder.put(EntityModelLayers.WALL_BANNER_FLAG, BannerFlagBlockModel.getTexturedModelData(false));
        builder.put(EntityModelLayers.BAT, BatEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.BED_FOOT, BedBlockEntityRenderer.getFootTexturedModelData());
        builder.put(EntityModelLayers.BED_HEAD, BedBlockEntityRenderer.getHeadTexturedModelData());
        builder.put(EntityModelLayers.BEE, lv16);
        builder.put(EntityModelLayers.BEE_BABY, lv16.transform(BeeEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.BEE_STINGER, StingerModel.getTexturedModelData());
        builder.put(EntityModelLayers.BELL, BellBlockModel.getTexturedModelData());
        builder.put(EntityModelLayers.BLAZE, BlazeEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.BOAT, BoatEntityModel.getBaseTexturedModelData());
        builder.put(EntityModelLayers.BOGGED, BoggedEntityModel.getTexturedModelData());
        EntityModelLayers.BOGGED_EQUIPMENT.addTo(lv2, builder);
        builder.put(EntityModelLayers.BOGGED_OUTER, TexturedModelData.of(BipedEntityModel.getModelData(new Dilation(0.2f), 0.0f), 64, 32));
        builder.put(EntityModelLayers.BOOK, BookModel.getTexturedModelData());
        builder.put(EntityModelLayers.BREEZE, BreezeEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.BREEZE_WIND, BreezeEntityModel.getWindTexturedModelData());
        builder.put(EntityModelLayers.BREEZE_EYES, BreezeEntityModel.getEyesTexturedModelData());
        builder.put(EntityModelLayers.CAT, lv22.transform(CatEntityModel.CAT_TRANSFORMER));
        builder.put(EntityModelLayers.CAT_BABY, lv23.transform(CatEntityModel.CAT_TRANSFORMER));
        builder.put(EntityModelLayers.CAT_COLLAR, lv24.transform(CatEntityModel.CAT_TRANSFORMER));
        builder.put(EntityModelLayers.CAT_BABY_COLLAR, lv24.transform(FelineEntityModel.BABY_TRANSFORMER).transform(CatEntityModel.CAT_TRANSFORMER));
        builder.put(EntityModelLayers.CAMEL, lv38);
        builder.put(EntityModelLayers.CAMEL_BABY, lv38.transform(CamelEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.CAMEL_SADDLE, lv39);
        builder.put(EntityModelLayers.CAMEL_BABY_SADDLE, lv39.transform(CamelEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.CAVE_SPIDER, lv36.transform(ModelTransformer.scaling(0.7f)));
        builder.put(EntityModelLayers.CHEST, ChestBlockModel.getSingleTexturedModelData());
        builder.put(EntityModelLayers.CHEST_MINECART, lv7);
        builder.put(EntityModelLayers.CHICKEN, lv40);
        builder.put(EntityModelLayers.CHICKEN_BABY, lv40.transform(ChickenEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.COD, CodEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.COLD_CHICKEN, lv18);
        builder.put(EntityModelLayers.COLD_CHICKEN_BABY, lv18.transform(ChickenEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.COLD_COW, lv19);
        builder.put(EntityModelLayers.COLD_COW_BABY, lv19.transform(CowEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.COLD_PIG, lv20);
        builder.put(EntityModelLayers.COLD_PIG_BABY, lv20.transform(PigEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.COMMAND_BLOCK_MINECART, lv7);
        builder.put(EntityModelLayers.CONDUIT_EYE, ConduitBlockEntityRenderer.getEyeTexturedModelData());
        builder.put(EntityModelLayers.CONDUIT_WIND, ConduitBlockEntityRenderer.getWindTexturedModelData());
        builder.put(EntityModelLayers.CONDUIT_SHELL, ConduitBlockEntityRenderer.getShellTexturedModelData());
        builder.put(EntityModelLayers.CONDUIT, ConduitBlockEntityRenderer.getPlainTexturedModelData());
        builder.put(EntityModelLayers.COPPER_GOLEM, CopperGolemEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.COPPER_GOLEM_EYES, CopperGolemEntityModel.getEyesTexturedModelData());
        builder.put(EntityModelLayers.COPPER_GOLEM_RUNNING, CopperGolemEntityModel.getRunningTexturedModelData());
        builder.put(EntityModelLayers.COPPER_GOLEM_SITTING, CopperGolemEntityModel.getSittingTexturedModelData());
        builder.put(EntityModelLayers.COPPER_GOLEM_STAR, CopperGolemEntityModel.getStarTexturedModelData());
        builder.put(EntityModelLayers.COW, lv17);
        builder.put(EntityModelLayers.COW_BABY, lv17.transform(CowEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.CREAKING, CreakingEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.CREAKING_EYES, CreakingEntityModel.getEyesTexturedModelData());
        builder.put(EntityModelLayers.CREEPER, CreeperEntityModel.getTexturedModelData(Dilation.NONE));
        builder.put(EntityModelLayers.CREEPER_ARMOR, CreeperEntityModel.getTexturedModelData(new Dilation(2.0f)));
        builder.put(EntityModelLayers.CREEPER_HEAD, lv8);
        builder.put(EntityModelLayers.DECORATED_POT_BASE, DecoratedPotBlockEntityRenderer.getTopBottomNeckTexturedModelData());
        builder.put(EntityModelLayers.DECORATED_POT_SIDES, DecoratedPotBlockEntityRenderer.getSidesTexturedModelData());
        builder.put(EntityModelLayers.DOLPHIN, lv59);
        builder.put(EntityModelLayers.DOLPHIN_BABY, lv59.transform(DolphinEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.DONKEY, DonkeyEntityModel.getTexturedModelData(0.87f));
        builder.put(EntityModelLayers.DONKEY_BABY, DonkeyEntityModel.getBabyTexturedModelData(0.87f));
        builder.put(EntityModelLayers.DONKEY_SADDLE, DonkeyEntityModel.getSaddleTexturedModelData(0.87f, false));
        builder.put(EntityModelLayers.DONKEY_BABY_SADDLE, DonkeyEntityModel.getSaddleTexturedModelData(0.87f, true));
        builder.put(EntityModelLayers.DOUBLE_CHEST_LEFT, ChestBlockModel.getDoubleChestLeftTexturedBlockData());
        builder.put(EntityModelLayers.DOUBLE_CHEST_RIGHT, ChestBlockModel.getDoubleChestRightTexturedBlockData());
        builder.put(EntityModelLayers.DRAGON_SKULL, DragonHeadEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.DROWNED, lv56);
        EntityModelLayers.DROWNED_EQUIPMENT.addTo(lv2, builder);
        builder.put(EntityModelLayers.DROWNED_OUTER, lv57);
        builder.put(EntityModelLayers.DROWNED_BABY, lv56.transform(BipedEntityModel.BABY_TRANSFORMER));
        EntityModelLayers.DROWNED_BABY_EQUIPMENT.addTo(lv3, builder);
        builder.put(EntityModelLayers.DROWNED_BABY_OUTER, lv57.transform(BipedEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.ELDER_GUARDIAN, GuardianEntityModel.getElderTexturedModelData());
        builder.put(EntityModelLayers.ELYTRA, lv21);
        builder.put(EntityModelLayers.ELYTRA_BABY, lv21.transform(ElytraEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.ENDERMAN, EndermanEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.ENDERMITE, EndermiteEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.ENDER_DRAGON, DragonEntityModel.createTexturedModelData());
        builder.put(EntityModelLayers.END_CRYSTAL, EndCrystalEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.EVOKER, lv14);
        builder.put(EntityModelLayers.EVOKER_FANGS, EvokerFangsEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.FOX, FoxEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.FOX_BABY, FoxEntityModel.getTexturedModelData().transform(FoxEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.FROG, FrogEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.FURNACE_MINECART, lv7);
        builder.put(EntityModelLayers.GHAST, GhastEntityModel.getTexturedModelData());
        ModelTransformer lv61 = ModelTransformer.scaling(6.0f);
        builder.put(EntityModelLayers.GIANT, lv.transform(lv61));
        EntityModelLayers.GIANT_EQUIPMENT.addTo(lv2.map(modelData -> modelData.transform(lv61)), builder);
        builder.put(EntityModelLayers.GLOW_SQUID, lv58);
        builder.put(EntityModelLayers.GLOW_SQUID_BABY, lv58.transform(SquidEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.GOAT, lv41);
        builder.put(EntityModelLayers.GOAT_BABY, lv41.transform(GoatEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.GUARDIAN, GuardianEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.HAPPY_GHAST, HappyGhastEntityModel.getTexturedModelData(false, Dilation.NONE));
        builder.put(EntityModelLayers.HAPPY_GHAST_BABY, HappyGhastEntityModel.getTexturedModelData(true, Dilation.NONE).transform(HappyGhastEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.HAPPY_GHAST_HARNESS, HappyGhastHarnessEntityModel.getTexturedModelData(false));
        builder.put(EntityModelLayers.HAPPY_GHAST_BABY_HARNESS, HappyGhastHarnessEntityModel.getTexturedModelData(true).transform(HappyGhastEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.HAPPY_GHAST_ROPES, HappyGhastEntityModel.getTexturedModelData(false, new Dilation(0.2f)));
        builder.put(EntityModelLayers.HAPPY_GHAST_BABY_ROPES, HappyGhastEntityModel.getTexturedModelData(true, new Dilation(0.2f)).transform(HappyGhastEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.HOGLIN, lv31);
        builder.put(EntityModelLayers.HOGLIN_BABY, lv32);
        builder.put(EntityModelLayers.HOPPER_MINECART, lv7);
        ModelTransformer lv62 = ModelTransformer.scaling(1.1f);
        builder.put(EntityModelLayers.HORSE, lv9.transform(lv62));
        builder.put(EntityModelLayers.HORSE_BABY, lv10.transform(lv62));
        builder.put(EntityModelLayers.HORSE_ARMOR, TexturedModelData.of(AbstractHorseEntityModel.getModelData(new Dilation(0.1f)), 64, 64).transform(lv62));
        builder.put(EntityModelLayers.HORSE_ARMOR_BABY, TexturedModelData.of(AbstractHorseEntityModel.getBabyHorseModelData(new Dilation(0.1f)), 64, 64).transform(lv62));
        builder.put(EntityModelLayers.HORSE_SADDLE, lv11.transform(lv62));
        builder.put(EntityModelLayers.HORSE_BABY_SADDLE, lv12.transform(lv62));
        ModelTransformer lv63 = ModelTransformer.scaling(1.0625f);
        builder.put(EntityModelLayers.HUSK, lv.transform(lv63));
        EntityModelLayers.HUSK_EQUIPMENT.addTo(lv2.map(modelData -> modelData.transform(lv63)), builder);
        builder.put(EntityModelLayers.HUSK_BABY, lv.transform(BipedEntityModel.BABY_TRANSFORMER).transform(lv63));
        EntityModelLayers.HUSK_BABY_EQUIPMENT.addTo(lv3.map(modelData -> modelData.transform(lv63)), builder);
        builder.put(EntityModelLayers.ILLUSIONER, lv14);
        builder.put(EntityModelLayers.IRON_GOLEM, IronGolemEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.LEASH_KNOT, LeashKnotEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.LLAMA, lv28);
        builder.put(EntityModelLayers.LLAMA_BABY, lv28.transform(LlamaEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.LLAMA_DECOR, lv29);
        builder.put(EntityModelLayers.LLAMA_BABY_DECOR, lv29.transform(LlamaEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.LLAMA_SPIT, LlamaSpitEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.MAGMA_CUBE, MagmaCubeEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.MINECART, lv7);
        builder.put(EntityModelLayers.MOOSHROOM, lv17);
        builder.put(EntityModelLayers.MOOSHROOM_BABY, lv17.transform(CowEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.MULE, DonkeyEntityModel.getTexturedModelData(0.92f));
        builder.put(EntityModelLayers.MULE_BABY, DonkeyEntityModel.getBabyTexturedModelData(0.92f));
        builder.put(EntityModelLayers.MULE_SADDLE, DonkeyEntityModel.getSaddleTexturedModelData(0.92f, false));
        builder.put(EntityModelLayers.MULE_BABY_SADDLE, DonkeyEntityModel.getSaddleTexturedModelData(0.92f, true));
        builder.put(EntityModelLayers.OCELOT, lv22);
        builder.put(EntityModelLayers.OCELOT_BABY, lv23);
        builder.put(EntityModelLayers.PANDA, lv42);
        builder.put(EntityModelLayers.PANDA_BABY, lv42.transform(PandaEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.PARROT, ParrotEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.PHANTOM, PhantomEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.PIG, lv43);
        builder.put(EntityModelLayers.PIG_BABY, lv43.transform(PigEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.PIG_SADDLE, lv44);
        builder.put(EntityModelLayers.PIG_BABY_SADDLE, lv44.transform(PigEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.PIGLIN, lv25);
        EntityModelLayers.PIGLIN_EQUIPMENT.addTo(lv5, builder);
        builder.put(EntityModelLayers.PIGLIN_BRUTE, lv25);
        EntityModelLayers.PIGLIN_BRUTE_EQUIPMENT.addTo(lv5, builder);
        builder.put(EntityModelLayers.PIGLIN_BABY, lv25.transform(BipedEntityModel.BABY_TRANSFORMER));
        EntityModelLayers.PIGLIN_BABY_EQUIPMENT.addTo(lv6, builder);
        builder.put(EntityModelLayers.PIGLIN_HEAD, lv26);
        builder.put(EntityModelLayers.PILLAGER, lv14);
        builder.put(EntityModelLayers.PLAYER, TexturedModelData.of(PlayerEntityModel.getTexturedModelData(Dilation.NONE, false), 64, 64));
        builder.put(EntityModelLayers.PLAYER_EARS, Deadmau5EarsEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.PLAYER_CAPE, PlayerCapeModel.getTexturedModelData());
        builder.put(EntityModelLayers.PLAYER_HEAD, lv27);
        EntityModelLayers.PLAYER_EQUIPMENT.addTo(lv4, builder);
        builder.put(EntityModelLayers.PLAYER_SLIM, TexturedModelData.of(PlayerEntityModel.getTexturedModelData(Dilation.NONE, true), 64, 64));
        ((EquipmentModelData)((Object)EntityModelLayers.PLAYER_SLIM)).addTo(lv4, builder);
        builder.put(EntityModelLayers.SPIN_ATTACK, TridentRiptideEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.POLAR_BEAR, PolarBearEntityModel.getTexturedModelData(false));
        builder.put(EntityModelLayers.POLAR_BEAR_BABY, PolarBearEntityModel.getTexturedModelData(true));
        builder.put(EntityModelLayers.PUFFERFISH_BIG, LargePufferfishEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.PUFFERFISH_MEDIUM, MediumPufferfishEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.PUFFERFISH_SMALL, SmallPufferfishEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.RABBIT, RabbitEntityModel.getTexturedModelData(false));
        builder.put(EntityModelLayers.RABBIT_BABY, RabbitEntityModel.getTexturedModelData(true));
        builder.put(EntityModelLayers.RAVAGER, RavagerEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.SALMON, lv60);
        builder.put(EntityModelLayers.SALMON_SMALL, lv60.transform(SalmonEntityModel.SMALL_TRANSFORMER));
        builder.put(EntityModelLayers.SALMON_LARGE, lv60.transform(SalmonEntityModel.LARGE_TRANSFORMER));
        builder.put(EntityModelLayers.SHEEP, lv45);
        builder.put(EntityModelLayers.SHEEP_BABY, lv45.transform(SheepEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.SHEEP_WOOL, lv46);
        builder.put(EntityModelLayers.SHEEP_BABY_WOOL, lv46.transform(SheepEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.SHEEP_WOOL_UNDERCOAT, lv45);
        builder.put(EntityModelLayers.SHEEP_BABY_WOOL_UNDERCOAT, lv45.transform(SheepEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.SHIELD, ShieldEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.SHULKER, ShulkerEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.SHULKER_BOX, ShulkerEntityModel.getShulkerBoxTexturedModelData());
        builder.put(EntityModelLayers.SHULKER_BULLET, ShulkerBulletEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.SILVERFISH, SilverfishEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.SKELETON, lv33);
        EntityModelLayers.SKELETON_EQUIPMENT.addTo(lv2, builder);
        builder.put(EntityModelLayers.SKELETON_HORSE, lv9);
        builder.put(EntityModelLayers.SKELETON_HORSE_BABY, lv10);
        builder.put(EntityModelLayers.SKELETON_HORSE_SADDLE, lv11);
        builder.put(EntityModelLayers.SKELETON_HORSE_BABY_SADDLE, lv12);
        builder.put(EntityModelLayers.SKELETON_SKULL, lv8);
        builder.put(EntityModelLayers.SLIME, SlimeEntityModel.getInnerTexturedModelData());
        builder.put(EntityModelLayers.SLIME_OUTER, SlimeEntityModel.getOuterTexturedModelData());
        builder.put(EntityModelLayers.SNIFFER, lv47);
        builder.put(EntityModelLayers.SNIFFER_BABY, lv47.transform(SnifferEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.SNOW_GOLEM, SnowGolemEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.SPAWNER_MINECART, lv7);
        builder.put(EntityModelLayers.SPIDER, lv36);
        builder.put(EntityModelLayers.SQUID, lv58);
        builder.put(EntityModelLayers.SQUID_BABY, lv58.transform(SquidEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.STRAY, lv33);
        EntityModelLayers.STRAY_EQUIPMENT.addTo(lv2, builder);
        builder.put(EntityModelLayers.STRAY_OUTER, TexturedModelData.of(BipedEntityModel.getModelData(new Dilation(0.25f), 0.0f), 64, 32));
        builder.put(EntityModelLayers.STRIDER, lv30);
        builder.put(EntityModelLayers.STRIDER_SADDLE, lv30);
        builder.put(EntityModelLayers.STRIDER_BABY, lv30.transform(StriderEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.STRIDER_BABY_SADDLE, lv30.transform(StriderEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.TADPOLE, TadpoleEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.TNT_MINECART, lv7);
        builder.put(EntityModelLayers.TRADER_LLAMA, lv28);
        builder.put(EntityModelLayers.TRADER_LLAMA_BABY, lv28.transform(LlamaEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.TRIDENT, TridentEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.TROPICAL_FISH_LARGE, LargeTropicalFishEntityModel.getTexturedModelData(Dilation.NONE));
        builder.put(EntityModelLayers.TROPICAL_FISH_LARGE_PATTERN, LargeTropicalFishEntityModel.getTexturedModelData(FISH_PATTERN_DILATION));
        builder.put(EntityModelLayers.TROPICAL_FISH_SMALL, SmallTropicalFishEntityModel.getTexturedModelData(Dilation.NONE));
        builder.put(EntityModelLayers.TROPICAL_FISH_SMALL_PATTERN, SmallTropicalFishEntityModel.getTexturedModelData(FISH_PATTERN_DILATION));
        builder.put(EntityModelLayers.TURTLE, lv48);
        builder.put(EntityModelLayers.TURTLE_BABY, lv48.transform(TurtleEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.VEX, VexEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.VILLAGER, lv34);
        builder.put(EntityModelLayers.VILLAGER_NO_HAT, lv35);
        builder.put(EntityModelLayers.VILLAGER_BABY, lv34.transform(VillagerResemblingModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.VILLAGER_BABY_NO_HAT, lv35.transform(VillagerResemblingModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.VINDICATOR, lv14);
        builder.put(EntityModelLayers.WARDEN, WardenEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.WARDEN_TENDRILS, WardenEntityModel.getTendrilsTexturedModelData());
        builder.put(EntityModelLayers.WARDEN_HEART, WardenEntityModel.getHeartTexturedModelData());
        builder.put(EntityModelLayers.WARDEN_BIOLUMINESCENT, WardenEntityModel.getBioluminescentTexturedModelData());
        builder.put(EntityModelLayers.WARDEN_PULSATING_SPOTS, WardenEntityModel.getPulsatingSpotsTexturedModelData());
        builder.put(EntityModelLayers.WARM_COW, lv49);
        builder.put(EntityModelLayers.WARM_COW_BABY, lv49.transform(CowEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.WANDERING_TRADER, lv34);
        builder.put(EntityModelLayers.WIND_CHARGE, WindChargeEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.WITCH, WitchEntityModel.getTexturedModelData().transform(lv13));
        builder.put(EntityModelLayers.WITHER, WitherEntityModel.getTexturedModelData(Dilation.NONE));
        builder.put(EntityModelLayers.WITHER_ARMOR, WitherEntityModel.getTexturedModelData(HAT_DILATION));
        builder.put(EntityModelLayers.WITHER_SKULL, WitherSkullEntityRenderer.getTexturedModelData());
        ModelTransformer lv64 = ModelTransformer.scaling(1.2f);
        builder.put(EntityModelLayers.WITHER_SKELETON, lv33.transform(lv64));
        EntityModelLayers.WITHER_SKELETON_EQUIPMENT.addTo(lv2.map(modelData -> modelData.transform(lv64)), builder);
        builder.put(EntityModelLayers.WITHER_SKELETON_SKULL, lv8);
        builder.put(EntityModelLayers.WOLF, lv50);
        builder.put(EntityModelLayers.WOLF_ARMOR, lv51);
        builder.put(EntityModelLayers.WOLF_BABY, lv50.transform(WolfEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.WOLF_BABY_ARMOR, lv51.transform(WolfEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.ZOGLIN, lv31);
        builder.put(EntityModelLayers.ZOGLIN_BABY, lv32);
        builder.put(EntityModelLayers.ZOMBIE, lv);
        EntityModelLayers.ZOMBIE_EQUIPMENT.addTo(lv2, builder);
        builder.put(EntityModelLayers.ZOMBIE_BABY, lv.transform(BipedEntityModel.BABY_TRANSFORMER));
        EntityModelLayers.ZOMBIE_BABY_EQUIPMENT.addTo(lv3, builder);
        builder.put(EntityModelLayers.ZOMBIE_HEAD, lv27);
        builder.put(EntityModelLayers.ZOMBIE_HORSE, lv9);
        builder.put(EntityModelLayers.ZOMBIE_HORSE_BABY, lv10);
        builder.put(EntityModelLayers.ZOMBIE_HORSE_SADDLE, lv11);
        builder.put(EntityModelLayers.ZOMBIE_HORSE_BABY_SADDLE, lv12);
        builder.put(EntityModelLayers.ZOMBIE_VILLAGER, lv52);
        builder.put(EntityModelLayers.ZOMBIE_VILLAGER_NO_HAT, lv53);
        EquipmentModelData<TexturedModelData> lv65 = ZombieVillagerEntityModel.getEquipmentModelData(HAT_DILATION, ARMOR_DILATION);
        EntityModelLayers.ZOMBIE_VILLAGER_EQUIPMENT.addTo(lv65, builder);
        builder.put(EntityModelLayers.ZOMBIE_VILLAGER_BABY, lv52.transform(BipedEntityModel.BABY_TRANSFORMER));
        builder.put(EntityModelLayers.ZOMBIE_VILLAGER_BABY_NO_HAT, lv53.transform(BipedEntityModel.BABY_TRANSFORMER));
        EntityModelLayers.ZOMBIE_VILLAGER_BABY_EQUIPMENT.addTo(lv65.map(modelData -> modelData.transform(BipedEntityModel.BABY_TRANSFORMER)), builder);
        builder.put(EntityModelLayers.ZOMBIFIED_PIGLIN, lv25);
        EntityModelLayers.ZOMBIFIED_PIGLIN_EQUIPMENT.addTo(lv5, builder);
        builder.put(EntityModelLayers.ZOMBIFIED_PIGLIN_BABY, lv25.transform(BipedEntityModel.BABY_TRANSFORMER));
        EntityModelLayers.ZOMBIFIED_PIGLIN_BABY_EQUIPMENT.addTo(lv6, builder);
        builder.put(EntityModelLayers.BAMBOO_BOAT, RaftEntityModel.getTexturedModelData());
        builder.put(EntityModelLayers.BAMBOO_CHEST_BOAT, RaftEntityModel.getChestTexturedModelData());
        TexturedModelData lv66 = BoatEntityModel.getTexturedModelData();
        TexturedModelData lv67 = BoatEntityModel.getChestTexturedModelData();
        builder.put(EntityModelLayers.OAK_BOAT, lv66);
        builder.put(EntityModelLayers.OAK_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.SPRUCE_BOAT, lv66);
        builder.put(EntityModelLayers.SPRUCE_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.BIRCH_BOAT, lv66);
        builder.put(EntityModelLayers.BIRCH_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.JUNGLE_BOAT, lv66);
        builder.put(EntityModelLayers.JUNGLE_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.ACACIA_BOAT, lv66);
        builder.put(EntityModelLayers.ACACIA_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.CHERRY_BOAT, lv66);
        builder.put(EntityModelLayers.CHERRY_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.DARK_OAK_BOAT, lv66);
        builder.put(EntityModelLayers.DARK_OAK_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.PALE_OAK_BOAT, lv66);
        builder.put(EntityModelLayers.PALE_OAK_CHEST_BOAT, lv67);
        builder.put(EntityModelLayers.MANGROVE_BOAT, lv66);
        builder.put(EntityModelLayers.MANGROVE_CHEST_BOAT, lv67);
        TexturedModelData lv68 = SignBlockEntityRenderer.getTexturedModelData(true);
        TexturedModelData lv69 = SignBlockEntityRenderer.getTexturedModelData(false);
        WoodType.stream().forEach(woodType -> {
            builder.put(EntityModelLayers.createStandingSign(woodType), lv68);
            builder.put(EntityModelLayers.createWallSign(woodType), lv69);
            for (HangingSignBlockEntityRenderer.AttachmentType lv : HangingSignBlockEntityRenderer.AttachmentType.values()) {
                TexturedModelData lv2 = HangingSignBlockEntityRenderer.getTexturedModelData(lv);
                builder.put(EntityModelLayers.createHangingSign(woodType, lv), lv2);
            }
        });
        ImmutableMap<EntityModelLayer, TexturedModelData> immutableMap = builder.build();
        List<EntityModelLayer> list = EntityModelLayers.getLayers().filter(layer -> !immutableMap.containsKey(layer)).toList();
        if (!list.isEmpty()) {
            throw new IllegalStateException("Missing layer definitions: " + String.valueOf(list));
        }
        return immutableMap;
    }
}

